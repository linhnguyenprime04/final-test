{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\84376\\\\Documents\\\\CIJS83\\\\bai_test\\\\my-react-app\\\\src\\\\components\\\\form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n  const [name, setName] = useState(\"\");\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(\"Task has been added!\");\n    setName(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"label-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo-input\",\n        className: \"label__lg\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"new-todo-input\",\n      className: \"input input__lg\",\n      name: \"text\",\n      autoComplete: \"off\",\n      value: name,\n      id: props.id,\n      type: \"checkbox\",\n      defaultChecked: props.completed,\n      onChange: () => props.toggleTaskCompleted(props.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn__primary btn__lg\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","props","_s","name","setName","handleChange","e","target","value","handleSubmit","preventDefault","addTask","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","autoComplete","defaultChecked","completed","onChange","toggleTaskCompleted","_c","$RefreshReg$"],"sources":["C:/Users/84376/Documents/CIJS83/bai_test/my-react-app/src/components/form.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\n  \r\n\r\nexport default function Form(props) {\r\n    \r\n    const [name, setName] = useState(\"\");\r\n\r\n    function handleChange(e) {\r\n        setName(e.target.value);\r\n      }\r\n\r\n    \r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.addTask(\"Task has been added!\");\r\n        setName(\"\");\r\n      }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2 className=\"label-wrapper\">\r\n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n                    What needs to be done?\r\n                </label>\r\n            </h2>\r\n            <input\r\n                type=\"text\"\r\n                id=\"new-todo-input\"\r\n                className=\"input input__lg\"\r\n                name=\"text\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                id={props.id}\r\n  type=\"checkbox\"\r\n  defaultChecked={props.completed}\r\n  onChange={() => props.toggleTaskCompleted(props.id)}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n                Add\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMjC,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEhC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASQ,YAAYA,CAACC,CAAC,EAAE;IACrBF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB;EAGF,SAASC,YAAYA,CAACH,CAAC,EAAE;IACrBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBT,KAAK,CAACU,OAAO,CAAC,sBAAsB,CAAC;IACrCP,OAAO,CAAC,EAAE,CAAC;EACb;EAEF,oBACIL,OAAA;IAAMa,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBACzBd,OAAA;MAAIe,SAAS,EAAC,eAAe;MAAAD,QAAA,eACzBd,OAAA;QAAOgB,OAAO,EAAC,gBAAgB;QAACD,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAC;MAEtD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACLpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,gBAAgB;MACnBP,SAAS,EAAC,iBAAiB;MAC3BX,IAAI,EAAC,MAAM;MACXmB,YAAY,EAAC,KAAK;MAClBd,KAAK,EAAEL,IAAK;MACZkB,EAAE,EAAEpB,KAAK,CAACoB,EAAG;MAC3BD,IAAI,EAAC,UAAU;MACfG,cAAc,EAAEtB,KAAK,CAACuB,SAAU;MAChCC,QAAQ,EAAEA,CAAA,KAAMxB,KAAK,CAACyB,mBAAmB,CAACzB,KAAK,CAACoB,EAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACFpB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,0BAA0B;MAAAD,QAAA,EAAC;IAE3D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGf;AAACjB,EAAA,CAxCuBF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}